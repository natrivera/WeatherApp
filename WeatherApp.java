
import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URL;
import java.text.*;
import java.util.*;
import javax.imageio.ImageIO;
import javax.swing.*;


public class WeatherApp extends javax.swing.JFrame
{

    WeatherUtility wu = new WeatherUtility();
    public WeatherApp()
    {
        initComponents();  
        
        ActionListener update = new ActionListener() {
         @Override
            public void actionPerformed(ActionEvent e) {
            SimpleDateFormat sdf = new SimpleDateFormat("E, MMMMM d"); 
            SimpleDateFormat sdfT = new SimpleDateFormat("h:mm:ss a");
            String day = sdf.format(new Date());
            String time = sdfT.format(new Date());
            dayText.setText(day);
            timeText.setText(time); 
            }
        };
        javax.swing.Timer t = new javax.swing.Timer(1000, update);
        t.start();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel8 = new javax.swing.JLabel();
        cityText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        playButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        tempLabel = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        zipText = new javax.swing.JTextField();
        zipButton = new javax.swing.JButton();
        imgLabel = new javax.swing.JLabel();
        descText = new javax.swing.JTextField();
        dayText = new javax.swing.JTextField();
        timeText = new javax.swing.JTextField();
        dayAfterText = new javax.swing.JTextField();
        dayDayText = new javax.swing.JTextField();
        tomText = new javax.swing.JTextField();

        jLabel8.setText("jLabel8");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Weather App");
        setBackground(new java.awt.Color(51, 51, 51));
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setForeground(new java.awt.Color(51, 51, 51));

        cityText.setEditable(false);
        cityText.setBackground(new java.awt.Color(51, 51, 51));
        cityText.setFont(new java.awt.Font("Lucida Fax", 0, 36)); // NOI18N
        cityText.setForeground(new java.awt.Color(75, 166, 181));
        cityText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cityText.setBorder(null);

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(231, 231, 231));
        jLabel6.setText("Get Local Weather");
        jLabel6.setToolTipText("");

        playButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        playButton.setForeground(new java.awt.Color(0, 0, 0));
        playButton.setText("Run");
        playButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                playButtonActionPerformed(evt);
            }
        });

        clearButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        clearButton.setForeground(new java.awt.Color(0, 0, 0));
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                clearButtonActionPerformed(evt);
            }
        });

        tempLabel.setEditable(false);
        tempLabel.setBackground(new java.awt.Color(51, 51, 51));
        tempLabel.setFont(new java.awt.Font("Lucida Fax", 0, 36)); // NOI18N
        tempLabel.setForeground(new java.awt.Color(75, 166, 181));
        tempLabel.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tempLabel.setBorder(null);

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(231, 231, 231));
        jLabel7.setLabelFor(zipText);
        jLabel7.setText("Zip");

        zipText.setBackground(new java.awt.Color(51, 51, 51));
        zipText.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        zipText.setForeground(new java.awt.Color(75, 166, 181));
        zipText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        zipText.setBorder(null);
        zipText.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                zipTextActionPerformed(evt);
            }
        });

        zipButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        zipButton.setForeground(new java.awt.Color(0, 0, 0));
        zipButton.setMnemonic('e');
        zipButton.setText("Lookup");
        zipButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                zipButtonActionPerformed(evt);
            }
        });

        imgLabel.setBackground(new java.awt.Color(51, 51, 51));
        imgLabel.setForeground(new java.awt.Color(0, 0, 0));
        imgLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        descText.setBackground(new java.awt.Color(51, 51, 51));
        descText.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        descText.setForeground(new java.awt.Color(75, 166, 181));
        descText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        descText.setBorder(null);
        descText.setFocusable(false);
        descText.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                descTextActionPerformed(evt);
            }
        });

        dayText.setBackground(new java.awt.Color(51, 51, 51));
        dayText.setFont(new java.awt.Font("Dialog", 0, 48)); // NOI18N
        dayText.setForeground(new java.awt.Color(75, 166, 181));
        dayText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dayText.setBorder(null);
        dayText.setOpaque(false);

        timeText.setBackground(new java.awt.Color(51, 51, 51));
        timeText.setFont(new java.awt.Font("Dialog", 0, 48)); // NOI18N
        timeText.setForeground(new java.awt.Color(75, 166, 181));
        timeText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        timeText.setBorder(null);
        timeText.setOpaque(false);

        dayAfterText.setEditable(false);
        dayAfterText.setBackground(new java.awt.Color(51, 51, 51));
        dayAfterText.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        dayAfterText.setForeground(new java.awt.Color(75, 166, 181));
        dayAfterText.setToolTipText("");
        dayAfterText.setBorder(null);
        dayAfterText.setOpaque(false);

        dayDayText.setEditable(false);
        dayDayText.setBackground(new java.awt.Color(51, 51, 51));
        dayDayText.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        dayDayText.setForeground(new java.awt.Color(75, 166, 181));
        dayDayText.setToolTipText("");
        dayDayText.setBorder(null);
        dayDayText.setOpaque(false);

        tomText.setEditable(false);
        tomText.setBackground(new java.awt.Color(51, 51, 51));
        tomText.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tomText.setForeground(new java.awt.Color(75, 166, 181));
        tomText.setToolTipText("");
        tomText.setBorder(null);
        tomText.setOpaque(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(timeText)
                    .addComponent(dayText)
                    .addComponent(cityText)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dayAfterText, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dayDayText, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tomText, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(imgLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(descText)
                            .addComponent(tempLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(zipText, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(playButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(zipButton, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(playButton)
                    .addComponent(clearButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(zipButton))
                    .addComponent(zipText, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(imgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tomText, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tempLabel)
                    .addComponent(dayAfterText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dayDayText)
                    .addComponent(descText, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(cityText, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dayText, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeText, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_playButtonActionPerformed
    {//GEN-HEADEREND:event_playButtonActionPerformed
        // TODO add your handling code here:
        
        //clear the info
        clear();
       
        
        String wapi = wu.latWeather();
        wu.getWeather(wapi);
        //System.out.println(wapi);
        //load the info
        load();
       
    }//GEN-LAST:event_playButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_clearButtonActionPerformed
    {//GEN-HEADEREND:event_clearButtonActionPerformed
        // TODO add your handling code here:
       clear();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void zipTextActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_zipTextActionPerformed
    {//GEN-HEADEREND:event_zipTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zipTextActionPerformed

    private void zipButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_zipButtonActionPerformed
    {//GEN-HEADEREND:event_zipButtonActionPerformed
        // TODO add your handling code here:
        String zip = zipText.getText();
        if(!zip.equals(""))
        {
            try
            {
                int i = Integer.parseInt(zip);
                String wapi = wu.zipWeather(i);
                wu.getWeather(wapi);
                load();
            }
            catch(NumberFormatException e)
            {
                JOptionPane.showMessageDialog(null, 
                        "Please enter an integer. \ni.e. 91768!", 
                        "Alert", JOptionPane.ERROR_MESSAGE);
            }
           
        }
        else
        {
            JOptionPane.showMessageDialog(null, 
                        "Please enter a Zip Code!", 
                        "Alert", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_zipButtonActionPerformed

    private void descTextActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_descTextActionPerformed
    {//GEN-HEADEREND:event_descTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descTextActionPerformed
public void clear()
{
     cityText.setText("");
     tempLabel.setText("");
     descText.setText("");
     imgLabel.setText("");
     zipText.setText("");
     tomText.setText("");
     dayAfterText.setText("");
     dayDayText.setText("");
}



public void load()
{
    //load the info
    if(wu.forecast.get(0).equals("0"))
        {
            JOptionPane.showMessageDialog(null, 
                        "Zip code not found!", 
                        "Alert", JOptionPane.ERROR_MESSAGE);
        }
    else
    {
        tempLabel.setText(" " + wu.forecast.get(0) + "º F");
        cityText.setText(" " + wu.getCity() + ", " + wu.getState());
        descText.setText(wu.fore.get(0).description);
        tomText.setText(wu.tommorrow);
        dayAfterText.setText(wu.dayAfter);
        dayDayText.setText(wu.dayDayAfter);
        
        String s = wu.getIcon();

        URL url = null;
        BufferedImage img = null;
        ImageIcon icon = null;
            try
            {
                url = new URL(s);
                img = ImageIO.read(url);
            } 
            catch (IOException ex)
            {}
        icon = new ImageIcon(img);   
        Image image = icon.getImage(); // transform it 
        Image newimg = image.getScaledInstance(160, 160,  java.awt.Image.SCALE_SMOOTH); // scale it the smooth way  
        icon = new ImageIcon(newimg);  // transform it back
        imgLabel.setIcon(icon);
        //System.out.println(s);
    }  
}


    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(WeatherApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(WeatherApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(WeatherApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(WeatherApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                WeatherApp f = new WeatherApp();
                f.setVisible(true);
                f.setLocationRelativeTo(null);
                Color col = new Color(60,60,60, 255);
                f.getContentPane().setBackground( col );
                ImageIcon img = new ImageIcon("icon.png");
                f.setIconImage(img.getImage());
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cityText;
    private javax.swing.JButton clearButton;
    private javax.swing.JTextField dayAfterText;
    private javax.swing.JTextField dayDayText;
    private javax.swing.JTextField dayText;
    private javax.swing.JTextField descText;
    private javax.swing.JLabel imgLabel;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JButton playButton;
    private javax.swing.JTextField tempLabel;
    private javax.swing.JTextField timeText;
    private javax.swing.JTextField tomText;
    private javax.swing.JButton zipButton;
    private javax.swing.JTextField zipText;
    // End of variables declaration//GEN-END:variables
}
